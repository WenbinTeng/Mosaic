module {{filename}}
#(
    parameter NIN  = {{streams_in|length}},   // logic input streams
    parameter NOUT = {{streams_out|length}},  // logic output streams
    parameter P    = {{phy_in}},              // phy in channels
    parameter Q    = {{phy_out}},             // phy out channels
    parameter PW   = {{packing}}              // packing width
)
(
    // ------ clock and reset ------
    input  wire                     {{clk}},
    input  wire                     {{rstn}},
    // ------ LII phy input ------
{%- for i in range(phy_in) %}
    input  wire [PW-1:0]            lii_din_p{{i}},
    input  wire                     lii_valid_in_p{{i}},
    output wire                     lii_ready_in_p{{i}},
    input  wire [7:0]               lii_src_in_p{{i}},
    input  wire [7:0]               lii_dst_in_p{{i}},
{%- endfor %}
    // ------ LII phy output ------
{%- for i in range(phy_out) %}
    output wire [PW-1:0]            lii_dout_p{{i}},
    output wire                     lii_valid_out_p{{i}},
    input  wire                     lii_ready_out_p{{i}},
    output wire [7:0]               lii_src_out_p{{i}},
    output wire [7:0]               lii_dst_out_p{{i}},
{%- endfor %}
    // ------ connection to HLS kernel ------
{%- for s in streams_in %}
    output wire [{{s.width-1}}:0]   {{s.name}}_data,
    output wire                     {{s.name}}_valid,
    input  wire                     {{s.name}}_ready,
{%- endfor %}
{%- for s in streams_out %}
    input  wire [{{s.width-1}}:0]   {{s.name}}_data
    input  wire                     {{s.name}}_valid,
    output wire                     {{s.name}}_ready,
{%- endfor %}
    // ------ clock enable for HLS kernel ------
    output wire                     ce
);

    // ========= input: unpack =========
{%- for i,grp in in_packing_groups %}
    assign lii_ready_in_p{{i}} =
        {% for s in grp %}{{s.name}}_ready{% if not loop.last %} | {% endif %}{% endfor %};
    always @(*) begin
        {%- set idx = 0 %}
        {%- for s in grp %}
        {{s.name}}_valid = lii_valid_in_p{{i}};
        {{s.name}}_data   = lii_din_p{{i}}[{{idx + s.width - 1}}:{{idx}}];
        {%- set idx = idx + s.width %}
        {%- endfor %}
    end
{%- endfor %}

    // ========= output: pack =========
{%- for i,grp in out_packing_groups %}
    assign lii_ready_out_p{{i}} = 
        {% for s in grp %}{{s.name}}_valid{% if not loop.last %} | {% endif %}{% endfor %};
    assign lii_dout_p{{i}} = {
{%- for s in grp %}
        {{s.name}}_dout{{", " if not loop.last else ""}}
{%- endfor %}
    };
    assign { {% for s in grp %}{{s.name}}_ready{% if not loop.last %}, {% endif %}{% endfor %} } =
           { {% for s in grp %}lii_ready_out_p{{i}}{% if not loop.last %}, {% endif %}{% endfor %} };
{%- endfor %}

    // ========= kernel clock gating =========
    assign ce = ({% for s in streams_in %}{{s.name}}_valid{% if not loop.last %} & {% endif %}{% endfor %}) &
                (~({% for i in range(phy_out) %}~lii_ready_out_p{{i}}{% if not loop.last %} | {% endif %}{% endfor %}));

endmodule
